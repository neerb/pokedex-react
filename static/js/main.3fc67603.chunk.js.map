{"version":3,"sources":["logo.svg","components/movecard.js","components/pokemoninformation.js","components/pokemon-card.js","components/errormessage.js","components/pokedex.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MoveCard","props","state","name","type","color","fetch","url","then","res","json","result","c","setState","routeToInformation","bind","updateClick","this","clicked","window","location","href","className","s","len","length","newStr","i","charAt","fixString","style","backgroundColor","Component","capitalize","toUpperCase","slice","convertColor","NavToPrev","history","useHistory","onClick","push","currentNum","reload","NavToNext","PokemonInformation","console","log","match","params","searchedName","idnum","moves","abilities","description","genus","allinformation","isLoaded","error","id","pokemonHeight","height","allInformation","species","flavorTextArray","flavor_text_entries","n","language","flavor_text","generaArray","genera","types","document","title","navToPrevious","navToNext","returnAbilityString","returnTypeBoxes","parseInt","ability","colorOne","colorTwo","Fragment","textTransform","margin","padding","bground","getElementById","background","src","sprites","front_default","back_default","front_shiny","back_shiny","toFixed","hectogramsToPounds","weight","base_experience","map","m","key","move","showInformation","PokemonCard","imageUrl","information","alt","ErrorMessage","textAlign","insertionSort","array","j","Pokedex","pokemonList","pokemonDataList","searchedPokemonDataList","results","pokemon","newList","returnMappedImages","showPokemonResults","value","newSearchList","toLowerCase","includes","p","sortedList","basename","process","exact","path","onChange","placeholder","component","App","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fc67603.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport \"./movecard.css\";\r\n\r\nconst convertColor = c => {\r\n  if (c === \"normal\") {\r\n    return \"#A8A878\";\r\n  } else if (c === \"fighting\") {\r\n    return \"#C03028\";\r\n  } else if (c === \"flying\") {\r\n    return \"#A890F0\";\r\n  } else if (c === \"poison\") {\r\n    return \"#A040A0\";\r\n  } else if (c === \"ground\") {\r\n    return \"#E0C068\";\r\n  } else if (c === \"rock\") {\r\n    return \"#B8A038\";\r\n  } else if (c === \"bug\") {\r\n    return \"#A8B820\";\r\n  } else if (c === \"ghost\") {\r\n    return \"#705898\";\r\n  } else if (c === \"steel\") {\r\n    return \"#B8B8D0\";\r\n  } else if (c === \"fire\") {\r\n    return \"#F08030\";\r\n  } else if (c === \"water\") {\r\n    return \"#6890F0\";\r\n  } else if (c === \"grass\") {\r\n    return \"#78C850\";\r\n  } else if (c === \"electric\") {\r\n    return \"#F8D030\";\r\n  } else if (c === \"psychic\") {\r\n    return \"#F85888\";\r\n  } else if (c === \"ice\") {\r\n    return \"#98D8D8\";\r\n  } else if (c === \"dragon\") {\r\n    return \"#7038F8\";\r\n  } else if (c === \"dark\") {\r\n    return \"#705848\";\r\n  } else if (c === \"fairy\") {\r\n    return \"#EE99AC\";\r\n  } else if (c === \"???\") {\r\n    return \"#68A090\";\r\n  }\r\n};\r\n\r\nconst fixString = s => {\r\n  if (typeof s !== \"string\") return \"\";\r\n\r\n  var len = s.length;\r\n  var newStr = \"\";\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (s.charAt(i) === \"-\") {\r\n      newStr += \" \";\r\n    } else {\r\n      newStr += s.charAt(i);\r\n    }\r\n  }\r\n\r\n  return newStr;\r\n};\r\n\r\nclass MoveCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      type: null,\r\n      color: null\r\n    };\r\n    fetch(props.url)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          name: result.name,\r\n          type: result.type.name,\r\n          color: convertColor(result.type.name)\r\n        });\r\n      });\r\n\r\n    this.routeToInformation = this.routeToInformation.bind(this);\r\n    this.updateClick = this.updateClick.bind(this);\r\n  }\r\n\r\n  updateClick() {\r\n    this.setState({ clicked: true });\r\n    window.location.href = \"/pokeinfo/\" + this.state.name;\r\n  }\r\n\r\n  routeToInformation() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"move-card\">\r\n        <div className=\"name\">{fixString(this.state.name)}</div>\r\n        <div style={{ backgroundColor: this.state.color }} className=\"type-box\">\r\n          {this.state.type}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoveCard;\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemoninformationstyles.css\";\r\nimport MoveCard from \"./movecard.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst capitalize = s => {\r\n  if (typeof s !== \"string\") return \"\";\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst convertColor = c => {\r\n  if (c === \"normal\") {\r\n    return \"#A8A878\";\r\n  } else if (c === \"fighting\") {\r\n    return \"#C03028\";\r\n  } else if (c === \"flying\") {\r\n    return \"#A890F0\";\r\n  } else if (c === \"poison\") {\r\n    return \"#A040A0\";\r\n  } else if (c === \"ground\") {\r\n    return \"#E0C068\";\r\n  } else if (c === \"rock\") {\r\n    return \"#B8A038\";\r\n  } else if (c === \"bug\") {\r\n    return \"#A8B820\";\r\n  } else if (c === \"ghost\") {\r\n    return \"#705898\";\r\n  } else if (c === \"steel\") {\r\n    return \"#B8B8D0\";\r\n  } else if (c === \"fire\") {\r\n    return \"#F08030\";\r\n  } else if (c === \"water\") {\r\n    return \"#6890F0\";\r\n  } else if (c === \"grass\") {\r\n    return \"#78C850\";\r\n  } else if (c === \"electric\") {\r\n    return \"#F8D030\";\r\n  } else if (c === \"psychic\") {\r\n    return \"#F85888\";\r\n  } else if (c === \"ice\") {\r\n    return \"#98D8D8\";\r\n  } else if (c === \"dragon\") {\r\n    return \"#7038F8\";\r\n  } else if (c === \"dark\") {\r\n    return \"#705848\";\r\n  } else if (c === \"fairy\") {\r\n    return \"#EE99AC\";\r\n  } else if (c === \"???\") {\r\n    return \"#68A090\";\r\n  }\r\n};\r\n\r\nconst hectogramsToPounds = s => {\r\n  return (s / 10.0).toFixed(2);\r\n};\r\n\r\nconst decimetersToCentimeters = s => {\r\n  return s * 10.0;\r\n};\r\n\r\nfunction NavToPrev(props) {\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(props.currentNum - 1);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"previous-btn\"\r\n      type=\"submit\"\r\n      onClick={handleClick}\r\n    ></button>\r\n  );\r\n}\r\n\r\nfunction NavToNext(props) {\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(props.currentNum + 1);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <button className=\"next-btn\" type=\"submit\" onClick={handleClick}></button>\r\n  );\r\n}\r\n\r\nclass PokemonInformation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.match.params);\r\n\r\n    this.state = {\r\n      searchedName: this.props.match.params.name,\r\n      name: null,\r\n      idnum: null,\r\n      moves: null,\r\n      abilities: null,\r\n      description: null,\r\n      genus: null,\r\n      color: null,\r\n      allinformation: null,\r\n      isLoaded: false,\r\n      error: false\r\n    };\r\n\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + this.state.searchedName)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          name: result.name,\r\n          idnum: result.id,\r\n          moves: result.moves,\r\n          abilities: result.abilities,\r\n          pokemonHeight: result.height,\r\n          allInformation: result,\r\n          isLoaded: true\r\n        });\r\n\r\n        fetch(this.state.allInformation.species.url)\r\n          .then(res => res.json())\r\n          .then(result => {\r\n            let flavorTextArray = result.flavor_text_entries;\r\n            let n = 0;\r\n\r\n            while (flavorTextArray[n].language.name !== \"en\") {\r\n              n++;\r\n            }\r\n\r\n            if (flavorTextArray[n].language.name === \"en\") {\r\n              this.setState({ description: flavorTextArray[n].flavor_text });\r\n            }\r\n\r\n            let generaArray = result.genera;\r\n            n = 0;\r\n\r\n            while (generaArray[n].language.name !== \"en\") {\r\n              n++;\r\n            }\r\n\r\n            if (generaArray[n].language.name === \"en\") {\r\n              this.setState({ genus: generaArray[n].genus });\r\n            }\r\n\r\n            if (\r\n              result.color.name === \"white\" ||\r\n              result.color.name == \"yellow\"\r\n            ) {\r\n              let types = this.state.allInformation.types;\r\n\r\n              if (types.length >= 1) {\r\n                this.setState({ color: convertColor(types[0].type.name) });\r\n              } else {\r\n                this.setState({ color: \"gray\" });\r\n              }\r\n            } else {\r\n              this.setState({ color: result.color.name });\r\n            }\r\n          });\r\n\r\n        document.title = capitalize(this.state.name);\r\n      });\r\n    /*\r\n      .catch(function() {\r\n        window.location.href = \"/error\";\r\n      });\r\n      */\r\n\r\n    this.navToPrevious = this.navToPrevious.bind(this);\r\n    this.navToNext = this.navToNext.bind(this);\r\n    this.returnAbilityString = this.returnAbilityString.bind(this);\r\n    this.returnTypeBoxes = this.returnTypeBoxes.bind(this);\r\n  }\r\n\r\n  navToPrevious() {\r\n    if (parseInt(this.state.allInformation.id, 10) - 1 > 0) {\r\n      /*\r\n      window.location.href =\r\n        \"/pokedex-react/#/pokeinfo/\" +\r\n        (parseInt(this.state.allInformation.id, 10) - 1);\r\n      window.location.reload();\r\n      */\r\n    }\r\n  }\r\n\r\n  navToNext() {\r\n    window.location.href =\r\n      \"/pokedex-react/#/pokeinfo/\" +\r\n      (parseInt(this.state.allInformation.id, 10) + 1);\r\n    window.location.reload();\r\n  }\r\n\r\n  returnAbilityString() {\r\n    let abilities = this.state.allInformation.abilities;\r\n\r\n    console.log(abilities);\r\n\r\n    if (abilities.length === 2) {\r\n      return (\r\n        capitalize(abilities[0].ability.name) +\r\n        \", \" +\r\n        capitalize(abilities[1].ability.name)\r\n      );\r\n    } else if (abilities.length === 1) {\r\n      return capitalize(abilities[0].ability.name);\r\n    } else {\r\n      return \"N/A\";\r\n    }\r\n  }\r\n\r\n  returnTypeBoxes() {\r\n    let types = this.state.allInformation.types;\r\n\r\n    if (types.length === 2) {\r\n      var orientation = \"to left\";\r\n      var colorOne = convertColor(types[0].type.name);\r\n      var colorTwo = convertColor(types[1].type.name);\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <span\r\n            style={{\r\n              backgroundColor: colorOne,\r\n              textTransform: \"uppercase\",\r\n              margin: \"5px\",\r\n              padding: \"2px 10px 2px 10px\"\r\n            }}\r\n          >\r\n            {types[0].type.name}\r\n          </span>\r\n          <span\r\n            style={{\r\n              backgroundColor: colorTwo,\r\n              textTransform: \"uppercase\",\r\n              margin: \"5px\",\r\n              padding: \"2px 10px 2px 10px\"\r\n            }}\r\n          >\r\n            {types[1].type.name}\r\n          </span>\r\n        </React.Fragment>\r\n      );\r\n    } else if (types.length === 1) {\r\n      var colorOne = convertColor(types[0].type.name);\r\n      return (\r\n        <React.Fragment>\r\n          <span\r\n            style={{\r\n              backgroundColor: colorOne,\r\n              textTransform: \"uppercase\",\r\n              margin: \"5px\",\r\n              padding: \"2px 10px 2px 10px\"\r\n            }}\r\n          >\r\n            {types[0].type.name}\r\n          </span>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <span style={{ backgroundColor: convertColor(\"???\") }}>???</span>;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  showInformation() {\r\n    const { allInformation } = this.state;\r\n\r\n    console.log(allInformation.types);\r\n\r\n    let types = allInformation.types;\r\n    const bground = document.getElementById(\"pokemon-information-background\");\r\n\r\n    if (types.length === 2) {\r\n      var orientation = \"to left\";\r\n      var colorOne = convertColor(types[0].type.name);\r\n      var colorTwo = convertColor(types[1].type.name);\r\n\r\n      if (bground !== null) {\r\n        bground.style.background =\r\n          \"linear-gradient(\" +\r\n          orientation +\r\n          \", \" +\r\n          colorOne +\r\n          \", \" +\r\n          colorTwo +\r\n          \")\";\r\n      }\r\n    } else if (types.length === 1) {\r\n      if (bground !== null) {\r\n        bground.style.background = convertColor(\r\n          allInformation.types[0].type.name\r\n        );\r\n      }\r\n    } else {\r\n      if (bground !== null) {\r\n        bground.style.background = convertColor(\"???\");\r\n      }\r\n    }\r\n\r\n    if (this.state.isLoaded === true && this.state.error === false) {\r\n      return (\r\n        <div className=\"pokeinfo\">\r\n          <div className=\"pokemon-idnum\">\r\n            <span>#{this.state.idnum}</span>\r\n          </div>\r\n          <div className=\"info-box\">\r\n            <div className=\"typeandstat-info\">\r\n              <div className=\"types\">{this.returnTypeBoxes()}</div>\r\n            </div>\r\n\r\n            <div className=\"sprites\">\r\n              <div className=\"two-sprites\">\r\n                <div>\r\n                  {\" \"}\r\n                  <strong>Normal</strong>\r\n                </div>\r\n                <img src={allInformation.sprites.front_default}></img>\r\n                <img src={allInformation.sprites.back_default}></img>\r\n              </div>\r\n\r\n              <div className=\"two-sprites\">\r\n                <div>\r\n                  <strong>Shiny</strong>\r\n                </div>\r\n                <img src={allInformation.sprites.front_shiny}></img>\r\n                <img src={allInformation.sprites.back_shiny}></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"short-description\">\r\n            <div className=\"genus-text\">{this.state.genus}</div>\r\n\r\n            <div className=\"flavor-text\">{this.state.description}</div>\r\n          </div>\r\n          <div className=\"section-box\" style={{ background: this.state.color }}>\r\n            {\" \"}\r\n            <span>Profile</span>\r\n          </div>\r\n          <div className=\"profile-info-box\">\r\n            <strong>Height:</strong>\r\n\r\n            <span>\r\n              {decimetersToCentimeters(this.state.allInformation.height)}cm\r\n            </span>\r\n\r\n            <strong>Weight:</strong>\r\n\r\n            <span>\r\n              {hectogramsToPounds(this.state.allInformation.weight)}kgs\r\n            </span>\r\n          </div>\r\n          <div className=\"profile-info-box\">\r\n            <strong>Abilities:</strong>\r\n\r\n            <span>{this.returnAbilityString()}</span>\r\n\r\n            <strong>Base Experience:</strong>\r\n\r\n            <span>{this.state.allInformation.base_experience}</span>\r\n          </div>\r\n          <div className=\"section-box\" style={{ background: this.state.color }}>\r\n            {\" \"}\r\n            <span>Moves</span>\r\n          </div>\r\n          <div className=\"moves-box\">\r\n            <ul>\r\n              {this.state.moves.map(m => (\r\n                <div key={m.move.name}>\r\n                  <MoveCard name={m.move.name} url={m.move.url}></MoveCard>\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded == true) {\r\n      return (\r\n        <React.Fragment>\r\n          <div\r\n            className=\"pokemon-information-background\"\r\n            id=\"pokemon-information-background\"\r\n          >\r\n            <div className=\"navbar-top\">\r\n              <div className=\"pokemon-name\"> {this.state.name}</div>\r\n\r\n              <NavToPrev currentNum={this.state.idnum}></NavToPrev>\r\n              <NavToNext currentNum={this.state.idnum}></NavToNext>\r\n            </div>\r\n            {this.showInformation()}\r\n            <div className=\"padding-bottom\"></div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"loading-screen\">\r\n          {\" \"}\r\n          <h1>Loading...</h1>\r\n          <div className=\"loading-screen-image\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PokemonInformation;\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemoncardstyle.css\";\r\nimport Pokedex from \"./pokedex\";\r\nimport PokemonInformation from \"./pokemoninformation\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass PokemonCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageUrl: props.imageUrl,\r\n      name: props.name,\r\n      information: props.information,\r\n      moves: null,\r\n      abilities: null,\r\n      clicked: false\r\n    };\r\n\r\n    this.routeToInformation = this.routeToInformation.bind(this);\r\n    this.updateClick = this.updateClick.bind(this);\r\n  }\r\n\r\n  updateClick() {\r\n    this.setState({ clicked: true });\r\n    window.location.href = \"/pokedex-react/#/pokeinfo/\" + this.state.name;\r\n  }\r\n\r\n  routeToInformation() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"pokemon-image-border\">\r\n          <div className=\"pokemon-id-number\">{this.state.information.id}</div>\r\n\r\n          <img\r\n            className=\"pokemon-image\"\r\n            src={this.state.imageUrl}\r\n            alt={this.state.name}\r\n            onClick={this.updateClick}\r\n          ></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorMessage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>An error occured.</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemonstyles.css\";\r\nimport PokemonCard from \"./pokemon-card\";\r\nimport PokemonInformation from \"./pokemoninformation\";\r\nimport ErrorMessage from \"./errormessage\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  HashRouter,\r\n  StaticRouter\r\n} from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst insertionSort = array => {\r\n  const length = array.length;\r\n\r\n  for (let i = 1; i < length; i++) {\r\n    let key = array[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && array[j].id > key.id) {\r\n      array[j + 1] = array[j];\r\n      j = j - 1;\r\n    }\r\n    array[j + 1] = key;\r\n  }\r\n  return array;\r\n};\r\n\r\nclass Pokedex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokemonList: [],\r\n      pokemonDataList: [],\r\n      searchedPokemonDataList: []\r\n    };\r\n\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=1000\")\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({ pokemonList: result.results });\r\n        //console.log(this.state.pokemonList);\r\n\r\n        this.state.pokemonList.map(pokemon => {\r\n          fetch(pokemon.url)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              let newList = insertionSort(this.state.pokemonDataList);\r\n\r\n              if (result.sprites.front_default != null) {\r\n                newList.push({\r\n                  name: result.name,\r\n                  id: result.id,\r\n                  imageUrl: result.sprites.front_default,\r\n                  allInformation: result\r\n                });\r\n              }\r\n\r\n              this.setState({\r\n                pokemonDataList: newList,\r\n                searchedPokemonDataList: newList\r\n              });\r\n            });\r\n        });\r\n      });\r\n\r\n    console.log(this.state.pokemonDataList);\r\n\r\n    //console.log(this.pokemonDataList);\r\n    this.returnMappedImages = this.returnMappedImages.bind(this);\r\n    this.showPokemonResults = this.showPokemonResults.bind(this);\r\n  }\r\n\r\n  showPokemonResults() {\r\n    const name = document.getElementById(\"pokemon-search-bar\").value;\r\n    let newSearchList = [];\r\n\r\n    if (name === \"\") {\r\n      newSearchList = this.state.pokemonDataList;\r\n    } else {\r\n      this.state.pokemonDataList.map(pokemon => {\r\n        if (pokemon.name.toLowerCase().includes(name.toLowerCase())) {\r\n          newSearchList.push(pokemon);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ searchedPokemonDataList: newSearchList });\r\n  }\r\n\r\n  returnMappedImages() {\r\n    return (\r\n      <div className=\"grid\">\r\n        {this.state.searchedPokemonDataList.map(p => (\r\n          <PokemonCard\r\n            className=\"grid-item\"\r\n            imageUrl={p.imageUrl}\r\n            name={p.name}\r\n            information={p.allInformation}\r\n            key={p.name}\r\n          ></PokemonCard>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let sortedList = insertionSort(this.state.pokemonDataList);\r\n\r\n    this.setState({ pokemonDataList: sortedList });\r\n\r\n    console.log(this.state.pokemonDataList);\r\n  }\r\n\r\n  updateSelectedPokemonInformation() {}\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      idnum,\r\n      error,\r\n      isLoaded,\r\n      pokemon,\r\n      pokemonHeight,\r\n      abilities,\r\n      moves,\r\n\r\n      pokemonList,\r\n      pokemonDataList\r\n    } = this.state;\r\n\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n          <Route exact path=\"/\">\r\n            <div className=\"pokedex\">\r\n              <div className=\"pokedex-division\" id=\"pokedex-division\">\r\n                <input\r\n                  className=\"pokemon-search\"\r\n                  type=\"text\"\r\n                  onChange={this.showPokemonResults}\r\n                  id=\"pokemon-search-bar\"\r\n                  placeholder=\"Search for a pokemon...\"\r\n                ></input>\r\n\r\n                {this.returnMappedImages()}\r\n              </div>\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/pokeinfo/:name\" component={PokemonInformation}></Route>\r\n\r\n          <Route path=\"/error\" component={ErrorMessage}></Route>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Pokedex from \"./components/pokedex\";\r\n\r\nfunction App() {\r\n  return <Pokedex></Pokedex>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Pokedex from \"./components/pokedex\";\r\n\r\ndocument.getElementById(\"root\").style.backgroundColor = \"red\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}