{"version":3,"sources":["logo.svg","components/pokemoninformation.js","components/pokemon-card.js","components/errormessage.js","components/pokedex.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","convertColor","c","PokemonInformation","props","console","log","match","params","state","searchedName","name","idnum","moves","abilities","allinformation","isLoaded","error","fetch","then","res","json","result","s","setState","id","pokemonHeight","height","allInformation","document","title","charAt","toUpperCase","slice","catch","window","location","href","navToPrevious","bind","navToNext","parseInt","this","types","bground","getElementById","length","colorOne","type","colorTwo","style","background","className","src","sprites","front_default","back_default","front_shiny","back_shiny","map","m","key","move","abil","ability","Fragment","value","onClick","showInformation","Component","PokemonCard","imageUrl","information","clicked","routeToInformation","updateClick","alt","ErrorMessage","textAlign","insertionSort","array","i","j","Pokedex","pokemonList","pokemonDataList","searchedPokemonDataList","results","pokemon","url","newList","push","returnMappedImages","showPokemonResults","newSearchList","includes","p","sortedList","basename","process","exact","path","onChange","placeholder","component","App","Boolean","hostname","backgroundColor","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f21be9bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport \"./pokemoninformationstyles.css\";\r\n\r\nconst capitalize = s => {\r\n  if (typeof s !== \"string\") return \"\";\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst convertColor = c => {\r\n  if (c === \"normal\") {\r\n    return \"#A8A878\";\r\n  } else if (c === \"fighting\") {\r\n    return \"#C03028\";\r\n  } else if (c === \"flying\") {\r\n    return \"#A890F0\";\r\n  } else if (c === \"poison\") {\r\n    return \"#A040A0\";\r\n  } else if (c === \"ground\") {\r\n    return \"#E0C068\";\r\n  } else if (c === \"rock\") {\r\n    return \"#B8A038\";\r\n  } else if (c === \"bug\") {\r\n    return \"#A8B820\";\r\n  } else if (c === \"ghost\") {\r\n    return \"#705898\";\r\n  } else if (c === \"steel\") {\r\n    return \"#B8B8D0\";\r\n  } else if (c === \"fire\") {\r\n    return \"#F08030\";\r\n  } else if (c === \"water\") {\r\n    return \"#6890F0\";\r\n  } else if (c === \"grass\") {\r\n    return \"#78C850\";\r\n  } else if (c === \"electric\") {\r\n    return \"#F8D030\";\r\n  } else if (c === \"psychic\") {\r\n    return \"#F85888\";\r\n  } else if (c === \"ice\") {\r\n    return \"#98D8D8\";\r\n  } else if (c === \"dragon\") {\r\n    return \"#7038F8\";\r\n  } else if (c === \"dark\") {\r\n    return \"#705848\";\r\n  } else if (c === \"fairy\") {\r\n    return \"#EE99AC\";\r\n  } else if (c === \"???\") {\r\n    return \"#68A090\";\r\n  }\r\n};\r\n\r\nclass PokemonInformation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.match.params);\r\n\r\n    this.state = {\r\n      searchedName: this.props.match.params.name,\r\n      name: null,\r\n      idnum: null,\r\n      moves: null,\r\n      abilities: null,\r\n      allinformation: null,\r\n      isLoaded: false,\r\n      error: false\r\n    };\r\n\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + this.state.searchedName)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          name: result.name,\r\n          idnum: result.id,\r\n          moves: result.moves,\r\n          abilities: result.abilities,\r\n          pokemonHeight: result.height,\r\n          allInformation: result,\r\n          isLoaded: true\r\n        });\r\n\r\n        document.title = capitalize(this.state.name);\r\n      })\r\n      .catch(function() {\r\n        window.location.href = \"/error\";\r\n      });\r\n\r\n    this.navToPrevious = this.navToPrevious.bind(this);\r\n    this.navToNext = this.navToNext.bind(this);\r\n  }\r\n\r\n  navToPrevious() {\r\n    window.location.href =\r\n      \"/pokeinfo/\" + (parseInt(this.state.allInformation.id, 10) - 1);\r\n  }\r\n\r\n  navToNext() {}\r\n\r\n  componentDidMount() {}\r\n\r\n  showInformation() {\r\n    const { allInformation } = this.state;\r\n\r\n    console.log(allInformation.types);\r\n\r\n    let types = allInformation.types;\r\n    const bground = document.getElementById(\"pokemon-information-background\");\r\n\r\n    if (types.length === 2) {\r\n      var orientation = \"to left\";\r\n      var colorOne = convertColor(types[0].type.name);\r\n      var colorTwo = convertColor(types[1].type.name);\r\n\r\n      console.log(\r\n        \"linear-gradient(\" +\r\n          orientation +\r\n          \", \" +\r\n          colorOne +\r\n          \", \" +\r\n          colorTwo +\r\n          \")\"\r\n      );\r\n\r\n      if (bground != null) {\r\n        bground.style.background =\r\n          \"linear-gradient(\" +\r\n          orientation +\r\n          \", \" +\r\n          colorOne +\r\n          \", \" +\r\n          colorTwo +\r\n          \")\";\r\n      }\r\n    } else if (types.length === 1) {\r\n      if (bground != null) {\r\n        bground.style.background = convertColor(\r\n          allInformation.types[0].type.name\r\n        );\r\n      }\r\n    } else {\r\n      if (bground != null) {\r\n        bground.style.background = convertColor(\"???\");\r\n      }\r\n    }\r\n\r\n    if (this.state.isLoaded === true && this.state.error === false) {\r\n      return (\r\n        <div className=\"pokeinfo\">\r\n          <div className=\"pokemon-name-id\">\r\n            <h1>{this.state.name}</h1> <h1>#{this.state.idnum}</h1>\r\n          </div>\r\n          <div className=\"image-box sprites\">\r\n            <img src={allInformation.sprites.front_default}></img>\r\n            <img src={allInformation.sprites.back_default}></img>\r\n            <img src={allInformation.sprites.front_shiny}></img>\r\n            <img src={allInformation.sprites.back_shiny}></img>\r\n          </div>\r\n          Moves:\r\n          <div className=\"moves-box\">\r\n            {this.state.moves.map(m => (\r\n              <div className=\"bordered-list-item\" key={m.move.name}>\r\n                {m.move.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <br></br>\r\n          Abilities:\r\n          {this.state.abilities.map(abil => (\r\n            <div className=\"bordered-list-item\" key={abil.ability.name}>\r\n              {abil.ability.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded == true) {\r\n      return (\r\n        <React.Fragment>\r\n          <div\r\n            className=\"pokemon-information-background\"\r\n            id=\"pokemon-information-background\"\r\n          >\r\n            <div className=\"navbar-top\">\r\n              <input\r\n                className=\"previous-btn\"\r\n                type=\"button\"\r\n                value=\"prev\"\r\n                onClick={this.navToPrevious}\r\n              ></input>\r\n            </div>\r\n            {this.showInformation()}\r\n            <div className=\"padding-bottom\"></div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PokemonInformation;\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemoncardstyle.css\";\r\nimport Pokedex from \"./pokedex\";\r\nimport PokemonInformation from \"./pokemoninformation\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass PokemonCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageUrl: props.imageUrl,\r\n      name: props.name,\r\n      information: props.information,\r\n      moves: null,\r\n      abilities: null,\r\n      clicked: false\r\n    };\r\n\r\n    this.routeToInformation = this.routeToInformation.bind(this);\r\n    this.updateClick = this.updateClick.bind(this);\r\n  }\r\n\r\n  updateClick() {\r\n    this.setState({ clicked: true });\r\n    window.location.href = \"/pokeinfo/\" + this.state.name;\r\n  }\r\n\r\n  routeToInformation() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"pokemon-image-border\">\r\n          <div className=\"pokemon-id-number\">{this.state.information.id}</div>\r\n\r\n          <img\r\n            className=\"pokemon-image\"\r\n            src={this.state.imageUrl}\r\n            alt={this.state.name}\r\n            onClick={this.updateClick}\r\n          ></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorMessage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>An error occured.</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemonstyles.css\";\r\nimport PokemonCard from \"./pokemon-card\";\r\nimport PokemonInformation from \"./pokemoninformation\";\r\nimport ErrorMessage from \"./errormessage\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst insertionSort = array => {\r\n  const length = array.length;\r\n\r\n  for (let i = 1; i < length; i++) {\r\n    let key = array[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && array[j].id > key.id) {\r\n      array[j + 1] = array[j];\r\n      j = j - 1;\r\n    }\r\n    array[j + 1] = key;\r\n  }\r\n  return array;\r\n};\r\n\r\nclass Pokedex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokemonList: [],\r\n      pokemonDataList: [],\r\n      searchedPokemonDataList: []\r\n    };\r\n\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=1000\")\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({ pokemonList: result.results });\r\n        //console.log(this.state.pokemonList);\r\n\r\n        this.state.pokemonList.map(pokemon => {\r\n          fetch(pokemon.url)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              let newList = insertionSort(this.state.pokemonDataList);\r\n\r\n              if (result.sprites.front_default != null) {\r\n                newList.push({\r\n                  name: result.name,\r\n                  id: result.id,\r\n                  imageUrl: result.sprites.front_default,\r\n                  allInformation: result\r\n                });\r\n              }\r\n\r\n              this.setState({\r\n                pokemonDataList: newList,\r\n                searchedPokemonDataList: newList\r\n              });\r\n            });\r\n        });\r\n      });\r\n\r\n    console.log(this.state.pokemonDataList);\r\n\r\n    //console.log(this.pokemonDataList);\r\n    this.returnMappedImages = this.returnMappedImages.bind(this);\r\n    this.showPokemonResults = this.showPokemonResults.bind(this);\r\n  }\r\n\r\n  showPokemonResults() {\r\n    const name = document.getElementById(\"pokemon-search-bar\").value;\r\n    let newSearchList = [];\r\n\r\n    if (name === \"\") {\r\n      newSearchList = this.state.pokemonDataList;\r\n    } else {\r\n      this.state.pokemonDataList.map(pokemon => {\r\n        if (pokemon.name.includes(name)) {\r\n          newSearchList.push(pokemon);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ searchedPokemonDataList: newSearchList });\r\n  }\r\n\r\n  returnMappedImages() {\r\n    return (\r\n      <div className=\"grid\">\r\n        {this.state.searchedPokemonDataList.map(p => (\r\n          <PokemonCard\r\n            className=\"grid-item\"\r\n            imageUrl={p.imageUrl}\r\n            name={p.name}\r\n            information={p.allInformation}\r\n            key={p.name}\r\n          ></PokemonCard>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let sortedList = insertionSort(this.state.pokemonDataList);\r\n\r\n    this.setState({ pokemonDataList: sortedList });\r\n\r\n    console.log(this.state.pokemonDataList);\r\n  }\r\n\r\n  updateSelectedPokemonInformation() {}\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      idnum,\r\n      error,\r\n      isLoaded,\r\n      pokemon,\r\n      pokemonHeight,\r\n      abilities,\r\n      moves,\r\n\r\n      pokemonList,\r\n      pokemonDataList\r\n    } = this.state;\r\n\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Route exact path=\"/\">\r\n          <div className=\"pokedex\">\r\n            <div className=\"pokedex-division\" id=\"pokedex-division\">\r\n              <input\r\n                className=\"pokemon-search\"\r\n                type=\"text\"\r\n                onChange={this.showPokemonResults}\r\n                id=\"pokemon-search-bar\"\r\n                placeholder=\"Search for a pokemon...\"\r\n              ></input>\r\n\r\n              {this.returnMappedImages()}\r\n            </div>\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path=\"/pokeinfo/:name\" component={PokemonInformation}></Route>\r\n\r\n        <Route path=\"/error\" component={ErrorMessage}></Route>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Pokedex from \"./components/pokedex\";\r\n\r\nfunction App() {\r\n  return <Pokedex></Pokedex>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Pokedex from \"./components/pokedex\";\r\n\r\ndocument.getElementById(\"root\").style.backgroundColor = \"red\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}